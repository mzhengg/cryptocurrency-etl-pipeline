# with docker-compose.yml, we can build up our services or tear it all down with a single command
version: '3'

services:
    warehouse: # make 'warehouse' image using postgres:13 as base image
      image: postgres:13
      container_name: warehouse
      environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
      volumes:
        - ./containers/warehouse:/docker-entrypoint-initdb.d
      healthcheck:
        test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
        interval: 5s
        retries: 5
      restart: always
      ports:
        - "5432:5432"
    pipelinerunner: # make 'pipelinerunner' image using Dockerfile
      image: pipelinerunner
      container_name: pipelinerunner
      build:
        context: ./
        dockerfile: ./containers/pipelinerunner/Dockerfile
      volumes:
        - ./:/code
      environment:
        WAREHOUSE_USER: ${POSTGRES_USER}
        WAREHOUSE_PASSWORD: ${POSTGRES_PASSWORD}
        WAREHOUSE_DB: ${POSTGRES_DB}
        WAREHOUSE_HOST: ${POSTGRES_HOST}
        WARREHOUSE_PORT: ${POSTGRES_PORT}
    dashboard: # make 'dashboard' image using metabase as base image (in Docker by default)
      image: metabase/metabase
      container_name: dashboard
      ports:
        - "3000:3000"